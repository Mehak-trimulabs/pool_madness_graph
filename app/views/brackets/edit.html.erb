<% content_for :head do %>
 <style>
   p.slot {cursor: hand; cursor: pointer;}
   p.slot:hover {background-color: #D6F5FF;}
 </style>
<% end %>

<h3 class="pagination-centered" style="color: #c52000"><%= "Editing #{@bracket.name} Bracket" %></h3>

<%= render @bracket %>


<div id="tie-breaker-form" class="input-append">
  <%= text_field_tag :tie_breaker, @bracket.tie_breaker, :size => 4, :id => 'tie-breaker-text-field' %>
  <button id="tie-breaker-submit-button" class="btn" type="button">Save Tie Breaker</button>
</div>

<div class="form-actions">
  <%= link_to 'Done', @bracket, :class => 'btn btn-primary' %>
</div>

<script type="text/javascript">
  var game_transitions = []; //hash of game id => [next game_id, slot (1 or 2)]
  var game_to_pick = []; //game_id => this bracket pick id
  <% Game.all.each do |g| %>
    game_to_pick[<%= g.id %>] = <%= @bracket.picks.find_by_game_id(g.id).id %>;
    <% unless g.next_game.blank? %>
      game_transitions[<%= g.id %>] = [<%= g.next_game.id %>, <%= g.next_slot %>];
    <% end %>
  <% end %>

  $(document).ready(function() {
     var form = $('#tie-breaker-form');
      form.hide();
      form.appendTo($('#tie-breaker'));

      <% if @bracket.tie_breaker.blank? %>
      $('#tie-breaker-static').hide();
      $('#tie-breaker-form').show();
      <% end %>
  });

    $('#tie-breaker-static').click(function() {
        $(this).hide();
        $('#tie-breaker-form').show();
    });

  $('#tie-breaker-submit-button').click(function() {
      var tie_breaker_score = parseInt($('#tie-breaker-text-field')[0].value);

      $.ajax({
          url: '/brackets/<%= @bracket.id %>',
          type: 'POST',
          data: {_method: 'PUT', bracket: {tie_breaker: tie_breaker_score}}
      });

      $('#tie-breaker-form').hide();
      $('#tie-breaker-static').html("Tie Breaker: " + tie_breaker_score).show();
  });

    $('.slot').click(function () {
        var parent_node = $(this).offsetParent();

        var current_game_id = parseInt(parent_node[0].id.replace('match', ''));
        var transition = game_transitions[current_game_id];

        var team_id = -1;
        var classList = $(this).attr('class').split(/\s+/);
        $.each( classList, function(index, item){
            if (item.substring(0, 4) == 'team') {
                team_id = parseInt(item.replace('team',''));
            }
        });


        //championship
        if(transition === undefined) {
            $('#slot127').removeClass('final_pick');
            $('#slot128').removeClass('final_pick');
            $('#slot127').removeClass('selected');
            $('#slot128').removeClass('selected');
          $(this).attr('class', classList.join(' ') + ' final_pick selected');
        }

        else {




          var next_game_id = transition[0];
          var next_slot = transition[1];

          var slot_node = $("div#match" + next_game_id + " > .slot" + next_slot);


            //get team in next slot
            var defunct_team_id = -1;
            var defunctClassList = slot_node.attr('class').split(/\s+/);
            $.each( defunctClassList, function(index, item){
                if (item.substring(0, 4) == 'team') {
                    defunct_team_id = parseInt(item.replace('team',''));
                }
            });

            if(defunct_team_id > 0 && defunct_team_id != team_id) {
              clearSelection(current_game_id, next_game_id, defunct_team_id);
            }



          slot_node.html($(this).html());
          slot_node.attr('class', 'slot slot' + next_slot + ' team' + team_id);
        }

        $.ajax({
            url: '/picks/' + game_to_pick[current_game_id],
            type: 'POST',
            data: { _method: 'PUT', pick: {team_id: team_id}}

        });


    });

    function clearSelection(prev_game_id, from_game_id, team_id) {
        var slot_node = $("div#match" + from_game_id + " > .team" + team_id);
        if(slot_node[0] === undefined) {
            return;

        }
        else {
            slot_node.html(' ');
            slot_node.removeClass("team" + team_id);

            $.ajax({
                url: '/picks/' + game_to_pick[prev_game_id],
                type: 'POST',
                data: { _method: 'PUT', pick: {team_id: -1}}

            });

            if(game_transitions[from_game_id] === undefined) {
                slot_node.removeClass('final_pick');
                slot_node.removeClass('selected');
            }
            else {
              clearSelection(from_game_id, game_transitions[from_game_id][0], team_id);
            }
        }
    }
</script>

